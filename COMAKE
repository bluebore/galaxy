#edit-mode: -*- python -*-
#coding:utf-8

#工作路径.
WORKROOT('../../../')

#使用硬链接copy.
CopyUsingHardLink(True)

#支持32位/64位平台编译
#ENABLE_MULTI_LIBS(True)

#C预处理器参数.
CPPFLAGS('-D_GNU_SOURCE -D__STDC_LIMIT_MACROS -DVERSION=\\\"_TEST_VERSION_\\\" -D_BD_KERNEL_')
#为32位目标编译指定额外的预处理参数
#CPPFLAGS_32('-D_XOPEN_SOURE=500')

#C编译参数.
CFLAGS('-g -pipe -W -Wall -Werror -fPIC')

#C++编译参数.
CXXFLAGS('-g -pipe -W -Wall -fPIC')

# protoc
PROTOC('../../../third-64/protobuf/bin/protoc')

#头文件路径.
INCPATHS('. ./src ./output/include ./common/include ./ins/sdk/')

#使用库
LIBS('./common/libcommon.a ./ins/libins_sdk.a')

#链接参数.
LDFLAGS('-lpthread -lz')

#依赖模块
CONFIGS('public/sofa-pbrpc@trunk@comake')
CONFIGS('thirdsrc/protobuf@2.6.2.0')
CONFIGS('third-64/boost@1.63.0.101')
CONFIGS('third-64/gflags@gflags_2-0-0-100_PD_BL')
CONFIGS('bdg/log/build-64/libs/thirdparty/rapidjson@1.0.0.0')
CONFIGS('third-64/leveldb@base')
scheduler_src='src/scheduler/scheduler.cc\
               src/proto/galaxy.proto\
               src/proto/master.proto\
               src/scheduler/scheduler_io.cc\
               src/utils/resource_utils.cc\
               src/flags.cc \
               src/master/master_watcher.cc\
               src/scheduler/scheduler_main.cc'

master_src='src/master/master_impl.cc\
            src/master/master_util.cc\
            src/master/master_main.cc\
            src/master/job_manager.cc\
            src/flags.cc \
            src/master/master_watcher.cc\
            src/utils/resource_utils.cc\
            src/proto/galaxy.proto\
            src/proto/master.proto\
            src/proto/agent.proto'

agent_src='src/agent/agent_impl.cc\
           src/agent/agent_main.cc\
           src/agent/pod_manager.cc\
           src/agent/task_manager.cc \
           src/agent/utils.cc\
           src/flags.cc\
           src/proto/agent.proto\
           src/proto/master.proto\
           src/master/master_watcher.cc\
           src/proto/galaxy.proto\
           src/agent/persistence_handler.cc\
           src/agent/cgroups.cc\
           src/proto/initd.proto\
           src/agent/resource_collector.cc\
           src/agent/cpu_scheduler.cc'

initd_src='src/gce/initd_main.cc\
           src/gce/initd_impl.cc\
           src/agent/utils.cc \
           src/proto/agent.proto\
           src/proto/galaxy.proto\
           src/agent/cgroups.cc\
           src/flags.cc\
           src/agent/cgroups.cc\
           src/proto/initd.proto'

sdk_src='src/sdk/galaxy.cc\
         src/proto/galaxy.proto\
         src/proto/master.proto'
sdk_headers='src/sdk/galaxy.h'

client_src='src/client/galaxy_client.cc'

test_task_manager_src='src/proto/initd.proto src/proto/galaxy.proto \
                       src/agent/task_manager.cc src/agent/utils.cc src/flags.cc \
                       src/agent/test_task_manager.cc src/agent/cgroups.cc\
                       src/agent/resource_collector.cc\
                       src/agent/cpu_scheduler.cc'
test_cgroup_src='src/agent/cgroups.cc src/agent/test_cgroups.cc'

test_resource_collector_src='src/agent/test_resource_collector.cc\
                            src/agent/resource_collector.cc src/flags.cc\
                            src/agent/cgroups.cc'
test_cgroup_resource_collector_src='src/agent/test_cgroup_resource_collector.cc\
                                   src/agent/resource_collector.cc src/flags.cc\
                                   src/agent/cgroups.cc'

test_persistence_handler_src='src/proto/agent.proto src/proto/galaxy.proto  \
                              src/proto/initd.proto \
                              src/agent/persistence_handler.cc src/agent/test_persistence_handler.cc'

test_index_list_src='src/agent/test_index_list.cc'
initd_cli_src='src/proto/initd.proto src/proto/galaxy.proto src/gce/initd_cli.cc'

Application('scheduler',Sources(scheduler_src))
Application('master',Sources(master_src))
Application('agent',Sources(agent_src))
Application('initd',Sources(initd_src))
StaticLibrary('galaxy',Sources(sdk_src),HeaderFiles(sdk_headers))
Application('galaxy',Sources(client_src), Libraries('./libgalaxy.a ./common/libcommon.a ./ins/libins_sdk.a'))
Application('test_task_manager', Sources(test_task_manager_src))
Application('test_cgroup', Sources(test_cgroup_src))
Application('test_resource_collector', Sources(test_resource_collector_src))
Application('test_persistence_handler', Sources(test_persistence_handler_src))
Application('test_cgroup_resource_collector', Sources(test_cgroup_resource_collector_src))
Application('test_index_list', Sources(test_index_list_src))
Application('initd_cli', Sources(initd_cli_src))

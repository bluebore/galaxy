import "galaxy.proto";

package baidu.galaxy;

option cc_generic_services = true;


enum JobType {
    kLongRun = 0;
    kBatch = 1; 
    kSystem = 2;
}

enum JobPriority {
    kMonitor = 75;
    kOnline = 50; 
    kOffline = 25;
    kBestEffort = 0;
}


enum TaskState {
    kRunning = 0;
    kPending = 1;
    kDeploying = 2;
    kTerminated = 3;
}

message JobDescriptor {
    optional string name = 1;
    optional string user = 2;
    optional JobType type = 3;
    optional int32 priority = 4;
    optional PodDescriptor pod = 5;
    repeated string labels = 6;
    optional int32 replica = 7;
    optional int32 deploy_step = 8;
    optional string version = 9;
}

message JobInfo {
    optional string jobid = 1;
    optional JobDescriptor job = 2;
    repeated PodStatus tasks = 3;
}

message ScheduleInfo {
    optional string endpoint = 1;
    optional string podid = 2;
}

message UserDescriptor {
    optional string username = 1;
}

message SubmitJobRequest {
    optional JobDescriptor job = 1;
}

message SubmitJobResponse {
    optional Status status = 1;
    optional string jobid = 2;
}

message UpdateJobRequest {
    optional string jobid = 1;
    optional JobDescriptor job = 2;
}

message UpdateJobResponse {
    optional Status status = 1;
}

message SuspendJobRequest {
    optional string jobid = 1;
}

message SuspendJobResponse {
    optional Status status = 1;
}

message ResumeJobRequest {
    optional string jobid = 1;
}

message ResumeJobResponse {
    optional Status status = 1;
}

message TerminateJobRequest {
    optional string jobid = 1;
}

message TerminateJobResponse {
    optional Status status = 1;
}

message ListJobsRequest {
}

message JobOverview {
    optional JobDescriptor desc = 1;
    optional string jobid = 2;
    optional int32 runing_num = 4;
    optional Resource resource_sed = 5;
}

message ListJobsResponse {
    optional Status status = 1;
    repeated JobOverview jobs = 2;
}

message ShowJobRequest {
    repeated string jobsid = 1;
}

message ShowJobResponse {
    optional Status status = 1;
    repeated JobInfo jobs = 2;
}

message HeartBeatRequest {
    optional string endpoint = 1;
}

message HeartBeatResponse {
}

message GetPendingJobsRequest {
}

message GetPendingJobsResponse {
    optional Status status = 1;
    repeated JobInfo jobs = 2;
}

message GetResourceSnapshotRequest {
}

message GetResourceSnapshotResponse {
    repeated AgentInfo agents = 1;
}

message ProposeRequest {
    repeated ScheduleInfo schedule = 1;
}

message ProposeResponse {
    optional Status status = 1;
}

message ListAgentsRequest {
}

message ListAgentsResponse {
    repeated AgentInfo agents = 1;
}

service Master {
    rpc SubmitJob(SubmitJobRequest) returns (SubmitJobResponse);
    rpc UpdateJob(UpdateJobRequest) returns (UpdateJobResponse);
    rpc SuspendJob(SuspendJobRequest) returns (SuspendJobResponse);
    rpc ResumeJob(ResumeJobRequest) returns (ResumeJobResponse); 
    rpc TerminateJob(TerminateJobRequest) returns (TerminateJobResponse);
    rpc ShowJob(ShowJobRequest) returns (ShowJobResponse);
    rpc ListJobs(ListJobsRequest) returns (ListJobsResponse);

    rpc HeartBeat(HeartBeatRequest) returns (HeartBeatResponse);

    // rpc AddUser() returns ();
    // rpc DeleteUser() returns ();
    // rpc UpdateUser() returns ();
    // rpc ListUsers() returns ();

    rpc GetPendingJobs(GetPendingJobsRequest) returns (GetPendingJobsResponse);
    rpc GetResourceSnapshot(GetResourceSnapshotRequest) returns (GetResourceSnapshotResponse);
    rpc Propose(ProposeRequest) returns (ProposeResponse);

    rpc ListAgents(ListAgentsRequest) returns (ListAgentsResponse);
}

package baidu.galaxy;

option cc_generic_services = true;

enum Status {
    kOk = 0;
    kUnknown = 1;
    kQuota = 2;
    kJobNotFound = 3;
    kPodNotFound = 4;
    kAgentNotFound = 5;
    kJobSubmitFail = 6;
    kNotFound = 16;
    kInputError = 17;

    kRpcError = 20;
}

enum PodState {
    kPodPending = 0;
    kPodDeploy = 1;
    kPodRunning = 2;
    kPodTerminate = 3;
    kPodSuspend = 4;
}

enum AgentState {
    kAlive = 0;
    kDead = 1;    
}

message Volume {
    optional int64 quota = 1;
    optional string path  = 2;
}

message Resource {
    optional int32 millicores = 1;
    // MB
    optional int32 memory = 2;
    repeated int32 ports = 3;
    repeated Volume disks = 4;
    repeated Volume ssds = 5; 
}

enum SourceType {
    kSourceTypeBinary = 0;
    kSourceTypeFTP = 1;
}

message TaskDescriptor {
    optional bytes binary = 1; 
    optional string start_command = 2;
    optional string stop_command = 3;
    optional Resource requirement = 4;
    repeated string labels = 5;
    repeated string env = 6;
    optional SourceType source_type = 7;
}

message PodDescriptor {
    repeated TaskDescriptor tasks = 1;
}

message TaskStatus {
    optional string taskid = 1;
    optional int32 exit_code = 2;
    optional Resource resource_used = 3;
    optional string version = 4;
    optional PodState state = 5;
}

message PodStatus {
    optional string podid = 1;
    optional string jobid = 2;
    repeated TaskStatus status = 3; 
    optional Resource resource_used = 4;
    optional string endpoint = 5;
    optional string version = 6;
    optional PodState state = 7;
}

message AgentInfo {
    optional string endpoint = 1;
    optional Resource total = 2;
    optional Resource assigned = 3;
    optional Resource used = 5;
    repeated PodStatus pods = 7;
    optional AgentState state = 8;
    optional int32 version = 9;
}

